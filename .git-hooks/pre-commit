#!/usr/bin/env bash
export GIT_DIR
GIT_DIR=$(git rev-parse --git-common-dir)

set -e

exec 1>&2

# If there are no changes, then we don't need to fix whitespace.
#
# We need to exit successfully here because this can happen if you run
# git commit --amend to edit the commit message. If we didn't check
# for this case here, then the script would find that the commit is
# empty later and exit with a failure (to disallow empty commits).
#
# But because git already checks for empty commits by itself before
# running pre-commit, we can be sure that the commit is fine if we
# get here *and* there are no changes.
if git diff --staged --quiet; then
  exit 0
fi

# Note: exiting early here means that the commit hook doesn't fail
# with git commit --amend when there are no changes

# Fix whitespace (index [= cached/staged area])
mapfile -t no_whitespace_glob < "$GIT_DIR/info/no-whitespace-files"
tmpdiff=$(mktemp)
trap 'rm -f "$tmpdiff"' EXIT
git diff --no-textconv --binary --cached --no-color -- "${no_whitespace_glob[@]}" > "$tmpdiff"
if [ -s "$tmpdiff" ]; then # if the patch is empty, git apply fails
  git apply --cached -R "$tmpdiff"
  git apply --cached --whitespace=fix "$tmpdiff" 2>&1 | sed -e '/trailing whitespace.$/ { N; d }' -re '/warning: [[:digit:]]+ lines? applied after fixing whitespace errors./d'
fi
rm -f "$tmpdiff"
trap - EXIT

# Fix whitespace (working directory)
tmpdiff=$(mktemp)
trap 'rm -f "$tmpdiff"' EXIT
git diff --no-textconv --binary --no-color -- "${no_whitespace_glob[@]}" > "$tmpdiff"
if [ -s "$tmpdiff" ]; then # if the patch is empty, git apply fails
  git apply -R "$tmpdiff"
  git apply --whitespace=fix $tmpdiff 2>&1 | sed -e '/trailing whitespace.$/ { N; d }' -re '/warning: [[:digit:]]+ lines? applied after fixing whitespace errors./d'
fi
rm -f "$tmpdiff"
trap - EXIT

# Check that there are any changes left after whitespace fixing
! git diff --cached --quiet || { echo "pre-commit: no changes to commit after fixing whitespace. exit"; exit 1; }

# Run transcrypt hook if present
TRANSCRYPT_HOOK="$GIT_DIR/hooks/pre-commit-crypt"
if [ -f "$TRANSCRYPT_HOOK" ]; then
  source "$TRANSCRYPT_HOOK"
fi
